{"version":3,"sources":["view/Topbar/Topbar.js","theme/palette.js","theme/typography.js","theme/overrides.js","theme/index.js","components/SearchCountry/components/CountrySummary/components/CountryDetails/CountryDetails.js","components/SearchCountry/components/CountrySummary/components/CountryChart/CountryChart.js","components/SearchCountry/components/CountrySummary/CountrySummary.js","components/SearchCountry/SearchCountry.js","common/Validate.js","view/SearchCountryView/SearchCountryView.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","topbar_wrapper","backgroundColor","palette","main","color","textAlign","padding","Topbar","classes","className","Grid","container","item","xs","Typography","variant","primary","contrastText","dark","light","typography","body1","body2","overrides","MuiPaper","root","height","createMuiTheme","responsiveFontSizes","CountryDetails","props","state","country","countryDetails","prevProps","Country","this","setState","updateDate","Date","slice","activeCases","TotalConfirmed","TotalRecovered","TotalDeaths","spacing","md","Card","CardStyles","CardContent","Component","withStyles","countryDetails_Wrapper","width","CountryChart","retrieveDailyData","cname","url","axios","get","then","res","data","map","each","getFormattedDate","apiError","catch","date","getDate","toLocaleString","month","countryName","countryStatus","Paper","label","strokeWidth","type","dataKey","dot","stroke","strokeDasharray","CountrySummary","countrySummary_wrapper","Slug","SearchCountry","componentDidMount","getCovidSummary","changeSearch","e","newValue","searchInput","matchedCountry","covidSummaryCountries","filter","countrySelected","submitSearch","preventDefault","Countries","covidSummaryGlobal","Global","err","searchWrapper","Autocomplete","id","autocompleteSearchInput","options","getOptionLabel","option","onInputChange","renderInput","params","InputProps","startAdornment","InputAdornment","position","style","paddingRight","resizeTextField","TextField","obj","hasOwnProperty","Object","prototype","length","key","call","isEmpty","minWidth","margin","fontSize","h6","SearchCountryView","App","ThemeProvider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f576ee9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {makeStyles, Typography, Grid} from \"@material-ui/core\";\r\n\r\nfunction Topbar() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.topbar_wrapper}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Coronavirus Summary</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    topbar_wrapper: {\r\n        backgroundColor: theme.palette.theme.main,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        padding: \"20px\"\r\n    }\r\n}))\r\nexport default Topbar;","const white = \"#FFFFFF\";\r\nconst themeColor = \"#003159\";\r\n\r\nconst palette = {\r\n    primary: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n    ,\r\n    theme: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n}\r\n\r\nexport default palette;","import palette from \"./palette\";\r\n\r\nconst typography =  {\r\n    body1: {\r\n        color: palette.theme.main,\r\n    },\r\n    body2: {\r\n        color: palette.theme.main,\r\n    }\r\n}\r\n\r\nexport default typography;","const overrides = {\r\n    MuiPaper: {\r\n        root: {\r\n            height: \"100%\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default overrides;","import { createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from \"./overrides\";\r\n\r\nlet theme = createMuiTheme({\r\n    overrides,\r\n    palette,\r\n    typography\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Typography, Grid, withStyles, CardContent } from \"@material-ui/core\";\r\n\r\nclass CountryDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.countryDetails\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryDetails.Country !== this.props.countryDetails.Country) {\r\n            this.setState({country: this.props.countryDetails});\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        const countryDetails = this.props.countryDetails;\r\n        const updateDate = countryDetails.Date.slice(0,10);\r\n        const activeCases = countryDetails.TotalConfirmed - countryDetails.TotalRecovered - countryDetails.TotalDeaths;\r\n        return (\r\n            <Grid container item spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">Summary of cases in {countryDetails.Country}</Typography>\r\n                    <Typography variant=\"body1\">last updated: {updateDate}</Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={1}>\r\n                    <Grid item xs={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>                         \r\n                                <Typography variant=\"h6\">Total Confirmed</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalConfirmed}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent> \r\n                                <Typography variant=\"h6\">Active Cases</Typography>\r\n                                <Typography variant=\"h6\">{activeCases}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Recovered</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalRecovered}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Deaths</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalDeaths}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n/**  \r\n{\r\n    \"Country\": \"Afghanistan\",\r\n    \"CountryCode\": \"AF\",\r\n    \"Slug\": \"afghanistan\",\r\n    \"NewConfirmed\": 575,\r\n    \"TotalConfirmed\": 20917,\r\n    \"NewDeaths\": 12,\r\n    \"TotalDeaths\": 369,\r\n    \"NewRecovered\": 296,\r\n    \"TotalRecovered\": 2171,\r\n    \"Date\": \"2020-06-09T08:25:40Z\"\r\n}\r\n*/\r\n\r\nconst styles = {\r\n    countryDetails_Wrapper: {\r\n        width: \"100%\"\r\n    },\r\n    CardStyles: {\r\n        width: \"100%\"\r\n    }\r\n}\r\n\r\n\r\nCountryDetails.propTypes = {\r\n    countryDetails : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountryDetails);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { LineChart, Line, Legend, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass CountryChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: this.props.countryName,\r\n            data: [],\r\n            apiError: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.retrieveDailyData(this.state.countryName, this.state.countryStatus);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryName !== this.props.countryName){\r\n            this.setState({countryName: this.props.countryName}, () => {\r\n                this.retrieveDailyData(this.state.countryName);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDailyData = (cname) => {\r\n        let url = `https://api.covid19api.com/dayone/country/${cname}`;\r\n\r\n        axios.get(url).then(\r\n            (res) => {\r\n                res.data.map((each) => {\r\n                    each.Date = this.getFormattedDate(new Date(each.Date));\r\n                    return each;\r\n                });\r\n                this.setState({data: res.data}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch(\r\n            this.setState({apiError: true})\r\n        )\r\n    }\r\n\r\n    getFormattedDate = (date) => {\r\n        return `${date.getDate()}-${date.toLocaleString('default', {month: 'long'}).slice(0,3)}`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper>\r\n                    <Typography variant=\"h6\">OVERALL CASES</Typography>\r\n                    <ResponsiveContainer width=\"100%\" height={400}>\r\n                        <LineChart label=\"hello\" data={this.state.data}>\r\n                            <Line strokeWidth={2} type=\"monotone\" dataKey=\"Confirmed\" dot={false} stroke=\"#032357\"/>\r\n                            <Line strokeWidth={2} type=\"monotone\" dataKey=\"Recovered\" dot={false} stroke=\"#056349\"/>\r\n                            <Line strokeWidth={2} type=\"monotone\" dataKey=\"Deaths\" dot={false} stroke=\"#8a0e03\"/>\r\n                            <Line strokeWidth={2} type=\"monotone\" dataKey=\"Active\" dot={false} stroke=\"#6b3b53\"/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <Tooltip/>\r\n                            <XAxis dataKey=\"Date\"/>\r\n                            <YAxis/>\r\n                            <Legend/>\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCountryChart.propTypes = {\r\n    countryName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CountryChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport CountryDetails from \"./components/CountryDetails\";\r\nimport CountryChart from \"./components/CountryChart\";\r\n\r\n\r\nclass CountrySummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.country\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.country.Country !== this.props.country.Country){\r\n            this.setState({country: this.props.country});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const country = this.state.country;\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.countrySummary_wrapper}>\r\n                <Grid container spacing={3}>\r\n                    <Grid container item xs={12} >\r\n                        <CountryDetails countryDetails={country}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <CountryChart countryName={this.state.country.Slug}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    countrySummary_wrapper: {\r\n        padding: \"40px 0\",\r\n        height: \"100%\",\r\n        textAlign: \"center\"\r\n    }\r\n}\r\n\r\nCountrySummary.propTypes = {\r\n    country: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountrySummary);\r\n","import React, { Component } from \"react\";\r\nimport { TextField, withStyles, Typography } from \"@material-ui/core\";\r\nimport Public from \"@material-ui/icons/Public\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport axios from \"axios\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport CountrySummary from \"./components/CountrySummary\";\r\n\r\nimport {isEmpty} from \"common/Validate\";\r\n\r\nclass SearchCountry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            searchInput: \"\",\r\n            covidSummaryCountries: [],\r\n            covidSummaryGlobal: {},\r\n            apiError: false,\r\n            countrySelected: {},\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCovidSummary();\r\n    }\r\n    \r\n    changeSearch = (e, newValue) => {\r\n        this.setState({searchInput: newValue}, () => {\r\n            let matchedCountry = (this.state.covidSummaryCountries.filter( (each) => each.Country === this.state.searchInput))[0];\r\n            if (typeof matchedCountry !== \"undefined\") {\r\n                this.setState({countrySelected: matchedCountry});\r\n            } else {\r\n                this.setState({countrySelected: {}});\r\n            }\r\n        });        \r\n    }\r\n\r\n    submitSearch = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    getCovidSummary = () => {\r\n        let url = \"https://api.covid19api.com/summary\";\r\n        //let url_test = \"https://my-json-server.typicode.com/sebbwitt/covid-dashboard/summary/\";\r\n        \r\n        axios.get(url)\r\n            .then(\r\n                (res) => {\r\n                    this.setState({covidSummaryCountries: res.data.Countries});\r\n                    this.setState({covidSummaryGlobal: res.data.Global});\r\n                },\r\n                (err) => {\r\n                    this.setState({apiError: true});\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        return (\r\n            <div className={classes.searchWrapper}>\r\n                <Typography variant=\"h4\">Search by Country name</Typography>\r\n                <Autocomplete\r\n                    id=\"asd\"\r\n                    className={classes.autocompleteSearchInput}\r\n                    options={this.state.covidSummaryCountries}\r\n                    getOptionLabel={(option) => option.Country}\r\n                    onInputChange={this.changeSearch}\r\n                    renderInput={(params) => {\r\n                        params.InputProps.startAdornment = (\r\n                            <InputAdornment position=\"start\">\r\n                                <Public style={{paddingRight:\"5px\"}}/>\r\n                                <Typography variant=\"h5\">   Country: </Typography>\r\n                            </InputAdornment>\r\n                        )\r\n                        params.InputProps.className = (classes.resizeTextField);\r\n                        return (<TextField\r\n                            {...params}/>)\r\n                    }}\r\n                />\r\n                { \r\n\r\n                    !isEmpty(this.state.countrySelected) && !this.state.apiError && <CountrySummary country={this.state.countrySelected}/>\r\n                    \r\n                }\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    searchWrapper: {\r\n        textAlign: \"center\"\r\n    },\r\n    autocompleteSearchInput: {\r\n        width: \"50%\",\r\n        minWidth: \"300px\",\r\n        margin: \"30px auto 0px\"\r\n    },\r\n    resizeTextField: {\r\n        fontSize: theme.typography.h6.fontSize\r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(SearchCountry);\r\n","export const isEmpty = (obj) => {\r\n    let hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    if (obj == null) return true;\r\n\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}","import React from \"react\";\r\nimport SearchCountry from \"components/SearchCountry\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction SearchCountryView() {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className={classes.SearchCountryView}>\r\n            <SearchCountry/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    SearchCountryView: {\r\n        padding: \"40px\"\r\n    }\r\n}))\r\n\r\nexport default SearchCountryView;","import React, { Component } from \"react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Topbar from \"view/Topbar\";\n\nimport theme from \"theme\";\nimport SearchCountryView from \"view/SearchCountryView\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<Topbar/>\n\t\t\t\t\t\t\t<SearchCountryView/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\n\t\t)\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}