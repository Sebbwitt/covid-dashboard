{"version":3,"sources":["view/Topbar/Topbar.js","theme/palette.js","theme/typography.js","theme/overrides.js","theme/index.js","components/SearchCountry/components/CountrySummary/components/CountryDetails/CountryDetails.js","components/SearchCountry/components/CountrySummary/components/CountryChart/CountryChart.js","components/SearchCountry/components/CountrySummary/CountrySummary.js","components/SearchCountry/SearchCountry.js","common/Validate.js","view/SearchCountryView/SearchCountryView.js","components/WorldSummary/WorldSummary.js","view/WorldSummaryView/WorldSummaryView.js","components/WorldTable/WorldTable.js","view/WorldTableView/WorldTableView.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","topbar_wrapper","backgroundColor","palette","main","color","textAlign","padding","Topbar","classes","className","Grid","container","item","xs","Typography","variant","primary","contrastText","dark","light","typography","body1","body2","overrides","MuiPaper","root","height","createMuiTheme","responsiveFontSizes","CountryDetails","props","state","country","countryDetails","prevProps","Country","this","setState","activeCases","TotalConfirmed","TotalRecovered","TotalDeaths","spacing","d","Date","getDate","toLocaleString","month","getFullYear","getFormattedDate","cd_grid_wrapper","sm","md","Card","CardStyles","CardContent","Component","withStyles","countryDetails_Wrapper","width","margin","CountryChart","retrieveDailyData","cname","url","axios","get","then","res","temp_data","data","map","each","apiError","catch","date","slice","countryName","countryStatus","Paper","label","strokeWidth","type","dataKey","dot","stroke","strokeDasharray","CountrySummary","countrySummary_wrapper","c_grid_wrapper","Slug","SearchCountry","componentDidMount","getCovidSummary","changeSearch","e","newValue","searchInput","matchedCountry","covidSummaryCountries","filter","countrySelected","countrySelectedName","history","push","submitSearch","preventDefault","Countries","countryParamArr","toLowerCase","length","err","searchWrapper","Autocomplete","autocompleteSearchInput","options","getOptionLabel","option","onInputChange","renderInput","params","InputProps","startAdornment","InputAdornment","position","style","paddingRight","resizeTextField","inputProps","placeholder","TextField","obj","hasOwnProperty","Object","prototype","key","call","isEmpty","minWidth","fontSize","h6","SearchCountryView","match","WorldSummary","worldSummaryData","worldSummary_Wrapper","header_margin","grid_wrapper","marginBottom","WorldSummaryView","WorldTable","getWorldData","worldData","handleChangePage","newPage","pageIndex","handleChangeRowsPerPage","rowsPerPage","parseInt","target","value","rows","constState","emptyRowsNum","Math","min","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","row","index","colSpan","TablePagination","tablePagination","rowsPerPageOptions","count","labelRowsPerPage","page","onChangePage","onChangeRowsPerPage","SelectProps","native","display","justifyContent","WorldTableView","App","ThemeProvider","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bde262ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {makeStyles, Typography, Grid} from \"@material-ui/core\";\r\n\r\nfunction Topbar() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.topbar_wrapper}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Coronavirus Summary</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    topbar_wrapper: {\r\n        backgroundColor: theme.palette.theme.main,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        padding: \"20px\"\r\n    }\r\n}))\r\nexport default Topbar;","const white = \"#FFFFFF\";\r\nconst themeColor = \"#003159\";\r\n\r\nconst palette = {\r\n    primary: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n    ,\r\n    theme: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n}\r\n\r\nexport default palette;","import palette from \"./palette\";\r\n\r\nconst typography =  {\r\n    body1: {\r\n        color: palette.theme.main,\r\n    },\r\n    body2: {\r\n        color: palette.theme.main,\r\n    }\r\n}\r\n\r\nexport default typography;","const overrides = {\r\n    MuiPaper: {\r\n        root: {\r\n            height: \"100%\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default overrides;","import { createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from \"./overrides\";\r\n\r\nlet theme = createMuiTheme({\r\n    overrides,\r\n    palette,\r\n    typography\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Typography, Grid, withStyles, CardContent } from \"@material-ui/core\";\r\n\r\nclass CountryDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.countryDetails\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryDetails.Country !== this.props.countryDetails.Country) {\r\n            this.setState({country: this.props.countryDetails});\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        const countryDetails = this.props.countryDetails;\r\n        const getFormattedDate = () => { let d = (new Date(countryDetails.Date)); return `${d.getDate()}-${d.toLocaleString('default', {month: 'long'})}-${d.getFullYear()}`};\r\n        const activeCases = countryDetails.TotalConfirmed - countryDetails.TotalRecovered - countryDetails.TotalDeaths;\r\n        return (\r\n            <Grid container item spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">Summary of cases in {countryDetails.Country}</Typography>\r\n                    <Typography variant=\"body1\">last updated: {getFormattedDate()}</Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={1} className={classes.cd_grid_wrapper}>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>                         \r\n                                <Typography variant=\"h6\">Total Confirmed</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalConfirmed}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent> \r\n                                <Typography variant=\"h6\">Active Cases</Typography>\r\n                                <Typography variant=\"h6\">{activeCases}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Recovered</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalRecovered}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Deaths</Typography>\r\n                                <Typography variant=\"h6\">{countryDetails.TotalDeaths}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    countryDetails_Wrapper: {\r\n        width: \"100%\"\r\n    },\r\n    CardStyles: {\r\n        width: \"100%\"\r\n    },\r\n    cd_grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    }\r\n}\r\n\r\n\r\nCountryDetails.propTypes = {\r\n    countryDetails : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountryDetails);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { LineChart, Line, Legend, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass CountryChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: this.props.countryName,\r\n            data: [],\r\n            apiError: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.retrieveDailyData(this.state.countryName, this.state.countryStatus);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryName !== this.props.countryName){\r\n            this.setState({countryName: this.props.countryName}, () => {\r\n                this.retrieveDailyData(this.state.countryName);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDailyData = (cname) => {\r\n        let url = `https://api.covid19api.com/total/country/${cname}`;\r\n\r\n        axios.get(url).then(\r\n            (res) => {\r\n                let temp_data = res.data;\r\n                temp_data.map((each) => {\r\n                    each.Date = this.getFormattedDate(new Date(each.Date));\r\n                    return each;\r\n                });\r\n                this.setState({data: temp_data}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch(\r\n            this.setState({apiError: true})\r\n        )\r\n    }\r\n\r\n    getFormattedDate = (date) => {\r\n        return `${date.getDate()}-${date.toLocaleString('default', {month: 'long'}).slice(0,3)}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const lineStrokeWidth = 5;\r\n\r\n        return (\r\n            <div>\r\n                <Paper>\r\n                    <Typography variant=\"h6\">OVERALL CASES</Typography>\r\n                    <ResponsiveContainer width=\"100%\" height={400}>\r\n                        <LineChart label=\"hello\" data={this.state.data}>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Confirmed\" dot={false} stroke=\"#032357\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Recovered\" dot={false} stroke=\"#056349\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Deaths\" dot={false} stroke=\"#8a0e03\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Active\" dot={false} stroke=\"#6b3b53\"/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <Tooltip/>\r\n                            <XAxis dataKey=\"Date\"/>\r\n                            <YAxis/>\r\n                            <Legend/>\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCountryChart.propTypes = {\r\n    countryName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CountryChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport CountryDetails from \"./components/CountryDetails\";\r\nimport CountryChart from \"./components/CountryChart\";\r\n\r\n\r\nclass CountrySummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.country\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.country.Country !== this.props.country.Country){\r\n            this.setState({country: this.props.country});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const country = this.state.country;\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.countrySummary_wrapper}>\r\n                <Grid container spacing={3} className={classes.c_grid_wrapper}>\r\n                    <Grid container item xs={12} >\r\n                        <CountryDetails countryDetails={country}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <CountryChart countryName={this.state.country.Slug}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    countrySummary_wrapper: {\r\n        padding: \"40px 0\",\r\n        height: \"100%\",\r\n        textAlign: \"center\"\r\n    },\r\n    c_grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    },\r\n}\r\n\r\nCountrySummary.propTypes = {\r\n    country: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountrySummary);\r\n","import React, { Component } from \"react\";\r\nimport { TextField, withStyles, Typography } from \"@material-ui/core\";\r\nimport Public from \"@material-ui/icons/Public\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport axios from \"axios\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport CountrySummary from \"./components/CountrySummary\";\r\n\r\nimport {isEmpty} from \"common/Validate\";\r\n\r\nclass SearchCountry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            searchInput: \"\",\r\n            covidSummaryCountries: [],\r\n            apiError: false,\r\n            countrySelected: {},\r\n            countrySelectedName: props.country || \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCovidSummary();\r\n    }\r\n    \r\n    changeSearch = (e, newValue) => {\r\n        this.setState({searchInput: newValue}, () => {\r\n            let matchedCountry = (this.state.covidSummaryCountries.filter( (each) => each.Country === this.state.searchInput))[0];\r\n            if (typeof matchedCountry !== \"undefined\") {\r\n                this.setState({countrySelected: matchedCountry});\r\n                this.setState({countrySelectedName: matchedCountry.Country});\r\n                this.props.history.push(`/covid-dashboard/${matchedCountry.Country}`);\r\n            } else {\r\n                this.setState({countrySelected: {}});\r\n            }\r\n        });        \r\n    }\r\n\r\n    submitSearch = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    getCovidSummary = () => {\r\n        let url = \"https://api.covid19api.com/summary\";\r\n        //let url_test = \"https://my-json-server.typicode.com/sebbwitt/covid-dashboard/summary/\";\r\n        \r\n        axios.get(url)\r\n            .then(\r\n                (res) => {\r\n                    this.setState({covidSummaryCountries: res.data.Countries}, () => {\r\n                        let countryParamArr = this.state.covidSummaryCountries.filter( (each) => each.Country.toLowerCase() === this.state.countrySelectedName.toLowerCase());\r\n                        if(countryParamArr.length === 1) {\r\n                            this.setState({countrySelectedName: countryParamArr[0].Country});\r\n                            this.setState({countrySelected: countryParamArr[0]});\r\n                        }\r\n                    });\r\n                },\r\n                (err) => {\r\n                    this.setState({apiError: true});\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        \r\n        return (\r\n            <div className={classes.searchWrapper}>\r\n                <Typography variant=\"h4\">Search by Country name</Typography>\r\n                <Autocomplete\r\n                    className={classes.autocompleteSearchInput}\r\n                    options={this.state.covidSummaryCountries}\r\n                    getOptionLabel={(option) => option.Country}\r\n                    onInputChange={this.changeSearch}\r\n                    renderInput={(params) => {\r\n                        params.InputProps.startAdornment = (\r\n                            <InputAdornment position=\"start\">\r\n                                <Public style={{paddingRight:\"5px\"}}/>\r\n                                <Typography variant=\"h5\">   Country: </Typography>\r\n                            </InputAdornment>\r\n                        )\r\n                        params.InputProps.className = (classes.resizeTextField);\r\n                        params.inputProps.placeholder = this.state.countrySelectedName;\r\n                        return (<TextField\r\n                            {...params}/>)\r\n                    }}\r\n                />\r\n                { \r\n\r\n                    !isEmpty(this.state.countrySelected) && !this.state.apiError && <CountrySummary country={this.state.countrySelected}/>\r\n                    \r\n                }\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    searchWrapper: {\r\n        textAlign: \"center\"\r\n    },\r\n    autocompleteSearchInput: {\r\n        width: \"50%\",\r\n        minWidth: \"300px\",\r\n        margin: \"30px auto 0px\"\r\n    },\r\n    resizeTextField: {\r\n        fontSize: theme.typography.h6.fontSize\r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(SearchCountry);\r\n","export const isEmpty = (obj) => {\r\n    let hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    if (obj == null) return true;\r\n\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}","import React from \"react\";\r\nimport SearchCountry from \"components/SearchCountry\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction SearchCountryView(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.SearchCountryView}>\r\n            <SearchCountry country={props.match.params.country} history={props.history}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    SearchCountryView: {\r\n        padding: \"40px\"\r\n    }\r\n}))\r\n\r\nexport default SearchCountryView;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Typography, Grid, Card, CardContent, withStyles } from \"@material-ui/core\";\r\n\r\nclass WorldSummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            worldSummaryData: {},\r\n            apiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = \"https://api.covid19api.com/world/total\";\r\n\r\n        axios.get(url).then(\r\n            (res) => {\r\n                this.setState({worldSummaryData: res.data}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch(() => {\r\n            this.setState({apiError: true});\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.worldSummary_Wrapper}>\r\n                <Typography variant=\"h4\" className={classes.header_margin}>World Overview</Typography>\r\n                <Grid container spacing={2} className={classes.grid_wrapper}>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Confirmed</Typography>\r\n                                <Typography variant=\"h6\">{this.state.worldSummaryData.TotalConfirmed}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Recovered</Typography>\r\n                                <Typography variant=\"h6\">{this.state.worldSummaryData.TotalRecovered}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Card variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Deaths</Typography>\r\n                                <Typography variant=\"h6\">{this.state.worldSummaryData.TotalDeaths}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    worldSummary_Wrapper: {\r\n        textAlign: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    header_margin: {\r\n        marginBottom: \"20px\"\r\n    }\r\n}\r\nexport default withStyles(styles)(WorldSummary);\r\n","import React from \"react\";\r\nimport WorldSummary from \"components/WorldSummary\";\r\nfunction WorldSummaryView() {\r\n    return (\r\n        <div>\r\n            <WorldSummary/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldSummaryView;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass WorldTable extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            worldData: [],\r\n            apiError: false,\r\n            pageIndex: 0,\r\n            rowsPerPage: 10\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getWorldData();\r\n    }\r\n\r\n    getWorldData = () => {\r\n        let url = \"https://api.covid19api.com/summary\";\r\n        axios.get(url).then(\r\n            (res) => {\r\n                this.setState({worldData: res.data.Countries}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch( () => {\r\n            this.setState({apiError: true});\r\n        });\r\n    }\r\n\r\n    handleChangePage = (e, newPage) => {\r\n        this.setState({pageIndex: newPage});\r\n    }\r\n\r\n    handleChangeRowsPerPage = (e) => {\r\n        this.setState({rowsPerPage: parseInt(e.target.value, 10)});\r\n        this.setState({pageIndex: 0});\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        const rows = this.state.worldData;\r\n        const constState = this.state;\r\n        const emptyRowsNum = constState.rowsPerPage - Math.min(constState.rowsPerPage, rows.length - constState.pageIndex * constState.rowsPerPage);\r\n        return (\r\n            <div>\r\n            <TableContainer component={Paper} style={{margin:\"0 auto\",width:\"95%\"}}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>No.</TableCell>\r\n                            <TableCell>Country</TableCell>\r\n                            <TableCell>Total Confirmed</TableCell>\r\n                            <TableCell>Total Recovered</TableCell>\r\n                            <TableCell>Total Active</TableCell>\r\n                            <TableCell>Total Deaths</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            rows\r\n                            .slice(constState.pageIndex * constState.rowsPerPage, constState.pageIndex * constState.rowsPerPage + constState.rowsPerPage)\r\n                            .map((row, index) => (\r\n                                <TableRow key={row.Country}>\r\n                                    <TableCell>{constState.pageIndex * constState.rowsPerPage + index + 1}</TableCell>\r\n                                    <TableCell>{row.Country}</TableCell>\r\n                                    <TableCell>{row.TotalConfirmed}</TableCell>\r\n                                    <TableCell>{row.TotalRecovered}</TableCell>\r\n                                    <TableCell>{row.TotalConfirmed - row.TotalRecovered}</TableCell>\r\n                                    <TableCell>{row.TotalDeaths}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                        {\r\n                            emptyRowsNum > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRowsNum }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )\r\n                        }\r\n                        <TableRow>\r\n                            <TableCell colSpan={6}>\r\n                                <TablePagination\r\n                                    className={classes.tablePagination}\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: rows.length}]}\r\n                                    component=\"div\"\r\n                                    count={rows.length}\r\n                                    labelRowsPerPage=\"Rows\"\r\n                                    rowsPerPage={this.state.rowsPerPage}\r\n                                    page={this.state.pageIndex}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                    SelectProps={{\r\n                                        native: true,\r\n                                    }}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    tablePagination: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(WorldTable);\r\n","import React from \"react\";\r\nimport WorldTable from \"components/WorldTable\";\r\n\r\nfunction WorldTableView() {\r\n    return (\r\n            <WorldTable/>\r\n    )\r\n}\r\n\r\nexport default WorldTableView;\r\n","import React, { Component } from \"react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Topbar from \"view/Topbar\";\n\nimport theme from \"theme\";\nimport SearchCountryView from \"view/SearchCountryView\";\nimport WorldSummaryView from \"view/WorldSummaryView/\";\nimport WorldTableView from \"view/WorldTableView/WorldTableView\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Topbar/>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render={()=> <Redirect to=\"/covid-dashboard/\"/>}/>\n\t\t\t\t\t\t<Route path=\"/covid-dashboard/:country\" component={SearchCountryView} />\n\t\t\t\t\t\t<Route path=\"/covid-dashboard\" component={SearchCountryView} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t\t<WorldSummaryView/>\n\t\t\t\t<WorldTableView/>\n\t\t\t</ThemeProvider>\n\n\t\t)\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}