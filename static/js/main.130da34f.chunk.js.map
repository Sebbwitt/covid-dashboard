{"version":3,"sources":["view/Topbar/Topbar.js","theme/palette.js","theme/typography.js","theme/overrides.js","theme/index.js","common/Util.js","components/SearchCountry/components/CountrySummary/components/CountryDetails/CountryDetails.js","components/SearchCountry/components/CountrySummary/components/CountryChart/CountryChart.js","components/SearchCountry/components/CountrySummary/CountrySummary.js","components/SearchCountry/SearchCountry.js","common/Validate.js","view/SearchCountryView/SearchCountryView.js","components/WorldSummary/WorldSummary.js","view/WorldSummaryView/WorldSummaryView.js","components/WorldTable/WorldTable.js","view/WorldTableView/WorldTableView.js","view/Footer/Footer.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","topbar_wrapper","backgroundColor","palette","main","color","textAlign","padding","Topbar","classes","className","Grid","container","item","xs","Typography","variant","primary","contrastText","dark","light","typography","body1","body2","overrides","MuiPaper","root","height","createMuiTheme","responsiveFontSizes","toThousandsComma","num","isNaN","num_parts","toString","split","replace","join","CountryDetails","props","state","country","countryDetails","prevProps","Country","this","setState","activeCases","TotalConfirmed","TotalRecovered","TotalDeaths","spacing","d","Date","getDate","toLocaleString","month","getFullYear","getFormattedDate","cd_grid_wrapper","sm","md","Card","CardStyles_Confirmed","CardContent","CardStyles_Active","CardStyles_Recovered","CardStyles_Deaths","Component","withStyles","countryDetails_Wrapper","width","margin","CountryChart","retrieveDailyData","cname","url","axios","get","then","res","temp_data","data","map","each","apiError","catch","date","slice","countryName","countryStatus","Paper","label","strokeWidth","type","dataKey","dot","stroke","strokeDasharray","CountrySummary","countrySummary_wrapper","c_grid_wrapper","Slug","SearchCountry","componentDidMount","getCovidSummary","changeSearch","e","newValue","searchInput","matchedCountry","covidSummaryCountries","filter","countrySelected","countrySelectedName","history","push","submitSearch","preventDefault","Countries","countryParamArr","toLowerCase","length","err","searchWrapper","Autocomplete","autocompleteSearchInput","options","getOptionLabel","option","onInputChange","renderInput","params","InputProps","startAdornment","InputAdornment","position","style","paddingRight","resizeTextField","inputProps","placeholder","TextField","obj","hasOwnProperty","Object","prototype","key","call","isEmpty","minWidth","fontSize","h6","SearchCountryView","match","WorldSummary","worldSummaryData","worldSummary_Wrapper","header_margin","grid_wrapper","marginBottom","wordSummary_wrapper","WorldSummaryView","WorldTable","getWorldData","worldData","handleChangePage","newPage","pageIndex","handleChangeRowsPerPage","rowsPerPage","parseInt","target","value","rows","constState","emptyRowsNum","Math","min","TableContainer","component","Table","border","TableHead","TableRow","TableCell","TableBody","row","index","colSpan","TablePagination","tablePagination","rowsPerPageOptions","count","labelRowsPerPage","page","onChangePage","onChangeRowsPerPage","SelectProps","native","display","justifyContent","worldTable_wrapper","WorldTableView","footer_wrapper","email_link","Footer","App","ThemeProvider","exact","path","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.130da34f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {makeStyles, Typography, Grid} from \"@material-ui/core\";\r\n\r\nfunction Topbar() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.topbar_wrapper}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h3\">Covid-19 Summary</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    topbar_wrapper: {\r\n        backgroundColor: theme.palette.theme.main,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        padding: \"20px\"\r\n    }\r\n}))\r\nexport default Topbar;","const white = \"#FFFFFF\";\r\nconst themeColor = \"#003159\";\r\n\r\nconst palette = {\r\n    primary: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n    ,\r\n    theme: {\r\n        contrastText: white,\r\n        dark: themeColor,\r\n        main: themeColor,\r\n        light: themeColor\r\n    }\r\n}\r\n\r\nexport default palette;","import palette from \"./palette\";\r\n\r\nconst typography =  {\r\n    body1: {\r\n        color: palette.theme.main,\r\n    },\r\n    body2: {\r\n        color: palette.theme.main,\r\n    }\r\n}\r\n\r\nexport default typography;","const overrides = {\r\n    MuiPaper: {\r\n        root: {\r\n            height: \"100%\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default overrides;","import { createMuiTheme, responsiveFontSizes} from '@material-ui/core/styles';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from \"./overrides\";\r\n\r\nlet theme = createMuiTheme({\r\n    overrides,\r\n    palette,\r\n    typography\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;","export const toThousandsComma = (num) => {\r\n\r\n    if (isNaN(num)) { return \"\";}\r\n    var num_parts = num.toString().split(\".\");\r\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return num_parts.join(\".\");\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {toThousandsComma} from \"common/Util\";\r\n\r\nimport { Card, Typography, Grid, withStyles, CardContent } from \"@material-ui/core\";\r\n\r\nclass CountryDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.countryDetails\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryDetails.Country !== this.props.countryDetails.Country) {\r\n            this.setState({country: this.props.countryDetails});\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        const countryDetails = this.props.countryDetails;\r\n        const getFormattedDate = () => { let d = (new Date(countryDetails.Date)); return `${d.getDate()}-${d.toLocaleString('default', {month: 'long'})}-${d.getFullYear()}`};\r\n        const activeCases = countryDetails.TotalConfirmed - countryDetails.TotalRecovered - countryDetails.TotalDeaths;\r\n        return (\r\n            <Grid container item spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">Summary of cases in {countryDetails.Country}</Typography>\r\n                    <Typography variant=\"body1\">last updated: {getFormattedDate()}</Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={4} className={classes.cd_grid_wrapper}>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Confirmed}>\r\n                            <CardContent>                         \r\n                                <Typography variant=\"h6\">Total Confirmed</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(countryDetails.TotalConfirmed)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Active}>\r\n                            <CardContent> \r\n                                <Typography variant=\"h6\">Active Cases</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(activeCases)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Recovered}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Recovered</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(countryDetails.TotalRecovered)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Deaths}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Deaths</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(countryDetails.TotalDeaths)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nconst styles = {\r\n    countryDetails_Wrapper: {\r\n        width: \"100%\"\r\n    },\r\n    CardStyles_Confirmed: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(3, 36, 89, 0.7)\"\r\n    },\r\n    CardStyles_Recovered: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(5, 97, 71, 0.7)\"\r\n    },\r\n    CardStyles_Deaths: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(140, 14, 3, 0.7)\"\r\n    },\r\n    CardStyles_Active: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(109, 60, 84, 0.7)\"\r\n    },\r\n    cd_grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    }\r\n}\r\n\r\n\r\nCountryDetails.propTypes = {\r\n    countryDetails : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountryDetails);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { LineChart, Line, Legend, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass CountryChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countryName: this.props.countryName,\r\n            data: [],\r\n            apiError: false\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.retrieveDailyData(this.state.countryName, this.state.countryStatus);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.countryName !== this.props.countryName){\r\n            this.setState({countryName: this.props.countryName}, () => {\r\n                this.retrieveDailyData(this.state.countryName);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDailyData = (cname) => {\r\n        let url = `https://api.covid19api.com/total/country/${cname}`;\r\n\r\n        axios.get(url).then(\r\n            (res) => {\r\n                let temp_data = res.data;\r\n                temp_data.map((each) => {\r\n                    each.Date = this.getFormattedDate(new Date(each.Date));\r\n                    return each;\r\n                });\r\n                this.setState({data: temp_data}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch(\r\n            this.setState({apiError: true})\r\n        )\r\n    }\r\n\r\n    getFormattedDate = (date) => {\r\n        return `${date.getDate()}-${date.toLocaleString('default', {month: 'long'}).slice(0,3)}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        const lineStrokeWidth = 5;\r\n\r\n        return (\r\n            <div>\r\n                <Paper>\r\n                    <Typography variant=\"h6\">OVERALL CASES</Typography>\r\n                    <ResponsiveContainer width=\"100%\" height={400}>\r\n                        <LineChart label=\"hello\" data={this.state.data}>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Confirmed\" dot={false} stroke=\"#032357\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Recovered\" dot={false} stroke=\"#056349\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Deaths\" dot={false} stroke=\"#8a0e03\"/>\r\n                            <Line strokeWidth={lineStrokeWidth} type=\"monotone\" dataKey=\"Active\" dot={false} stroke=\"#6b3b53\"/>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <Tooltip/>\r\n                            <XAxis dataKey=\"Date\"/>\r\n                            <YAxis/>\r\n                            <Legend/>\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCountryChart.propTypes = {\r\n    countryName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CountryChart;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport CountryDetails from \"./components/CountryDetails\";\r\nimport CountryChart from \"./components/CountryChart\";\r\n\r\n\r\nclass CountrySummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country: this.props.country\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.country.Country !== this.props.country.Country){\r\n            this.setState({country: this.props.country});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const country = this.state.country;\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.countrySummary_wrapper}>\r\n                <Grid container spacing={3} className={classes.c_grid_wrapper}>\r\n                    <Grid container item xs={12} >\r\n                        <CountryDetails countryDetails={country}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <CountryChart countryName={this.state.country.Slug}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst styles = {\r\n    countrySummary_wrapper: {\r\n        padding: \"40px 0\",\r\n        height: \"100%\",\r\n        textAlign: \"center\"\r\n    },\r\n    c_grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    },\r\n}\r\n\r\nCountrySummary.propTypes = {\r\n    country: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(CountrySummary);\r\n","import React, { Component } from \"react\";\r\nimport { TextField, withStyles, Typography } from \"@material-ui/core\";\r\nimport Public from \"@material-ui/icons/Public\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport axios from \"axios\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport CountrySummary from \"./components/CountrySummary\";\r\n\r\nimport {isEmpty} from \"common/Validate\";\r\n\r\nclass SearchCountry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            searchInput: \"\",\r\n            covidSummaryCountries: [],\r\n            apiError: false,\r\n            countrySelected: {},\r\n            countrySelectedName: props.country || \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getCovidSummary();\r\n    }\r\n    \r\n    changeSearch = (e, newValue) => {\r\n        this.setState({searchInput: newValue}, () => {\r\n            let matchedCountry = (this.state.covidSummaryCountries.filter( (each) => each.Country === this.state.searchInput))[0];\r\n            if (typeof matchedCountry !== \"undefined\") {\r\n                this.setState({countrySelected: matchedCountry});\r\n                this.setState({countrySelectedName: matchedCountry.Country});\r\n                this.props.history.push(`/covid-dashboard/${matchedCountry.Country}`);\r\n            } else {\r\n                this.setState({countrySelected: {}});\r\n            }\r\n        });        \r\n    }\r\n\r\n    submitSearch = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    getCovidSummary = () => {\r\n        let url = \"https://api.covid19api.com/summary\";\r\n        //let url_test = \"https://my-json-server.typicode.com/sebbwitt/covid-dashboard/summary/\";\r\n        \r\n        axios.get(url)\r\n            .then(\r\n                (res) => {\r\n                    this.setState({covidSummaryCountries: res.data.Countries}, () => {\r\n                        let countryParamArr = this.state.covidSummaryCountries.filter( (each) => each.Country.toLowerCase() === this.state.countrySelectedName.toLowerCase());\r\n                        if(countryParamArr.length === 1) {\r\n                            this.setState({countrySelectedName: countryParamArr[0].Country});\r\n                            this.setState({countrySelected: countryParamArr[0]});\r\n                        }\r\n                    });\r\n                },\r\n                (err) => {\r\n                    this.setState({apiError: true});\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n\r\n        const classes = this.props.classes;\r\n        \r\n        return (\r\n            <div className={classes.searchWrapper}>\r\n                <Typography variant=\"h4\">Search by Country name</Typography>\r\n                <Autocomplete\r\n                    className={classes.autocompleteSearchInput}\r\n                    options={this.state.covidSummaryCountries}\r\n                    getOptionLabel={(option) => option.Country}\r\n                    onInputChange={this.changeSearch}\r\n                    renderInput={(params) => {\r\n                        params.InputProps.startAdornment = (\r\n                            <InputAdornment position=\"start\">\r\n                                <Public style={{paddingRight:\"5px\"}}/>\r\n                                <Typography variant=\"h5\">   Country: </Typography>\r\n                            </InputAdornment>\r\n                        )\r\n                        params.InputProps.className = (classes.resizeTextField);\r\n                        params.inputProps.placeholder = this.state.countrySelectedName;\r\n                        return (<TextField\r\n                            {...params}/>)\r\n                    }}\r\n                />\r\n                { \r\n\r\n                    !isEmpty(this.state.countrySelected) && !this.state.apiError && <CountrySummary country={this.state.countrySelected}/>\r\n                    \r\n                }\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n    searchWrapper: {\r\n        textAlign: \"center\"\r\n    },\r\n    autocompleteSearchInput: {\r\n        width: \"50%\",\r\n        minWidth: \"300px\",\r\n        margin: \"30px auto 0px\"\r\n    },\r\n    resizeTextField: {\r\n        fontSize: theme.typography.h6.fontSize\r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(SearchCountry);\r\n","export const isEmpty = (obj) => {\r\n    let hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    if (obj == null) return true;\r\n\r\n    if (obj.length > 0)    return false;\r\n    if (obj.length === 0)  return true;\r\n\r\n    if (typeof obj !== \"object\") return true;\r\n\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n","import React from \"react\";\r\nimport SearchCountry from \"components/SearchCountry\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction SearchCountryView(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.SearchCountryView}>\r\n            <SearchCountry country={props.match.params.country} history={props.history}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    SearchCountryView: {\r\n        padding: \"40px\"\r\n    }\r\n}))\r\n\r\nexport default SearchCountryView;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {toThousandsComma} from \"common/Util\";\r\n\r\nimport { Typography, Grid, Card, CardContent, withStyles } from \"@material-ui/core\";\r\n\r\nclass WorldSummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            worldSummaryData: {},\r\n            apiError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let url = \"https://api.covid19api.com/world/total\";\r\n\r\n        axios.get(url).then(\r\n            (res) => {\r\n                this.setState({worldSummaryData: res.data}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch(() => {\r\n            this.setState({apiError: true});\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        return (\r\n            <div className={classes.worldSummary_Wrapper}>\r\n                <Typography variant=\"h4\" className={classes.header_margin}>World Overview</Typography>\r\n                <Grid container spacing={2} className={classes.grid_wrapper}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Confirmed}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Confirmed</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(this.state.worldSummaryData.TotalConfirmed)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Active}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Active Cases</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(this.state.worldSummaryData.TotalConfirmed - this.state.worldSummaryData.TotalRecovered)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Recovered}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Recovered</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(this.state.worldSummaryData.TotalRecovered)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Card variant=\"outlined\" className={classes.CardStyles_Deaths}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">Total Deaths</Typography>\r\n                                <Typography variant=\"h6\">{toThousandsComma(this.state.worldSummaryData.TotalDeaths)}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    worldSummary_Wrapper: {\r\n        textAlign: \"center\",\r\n        width: \"95%\",\r\n        margin: \"0 auto 50px\"\r\n    },\r\n    CardStyles_Confirmed: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(3, 36, 89, 0.7)\"\r\n    },\r\n    CardStyles_Recovered: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(5, 97, 71, 0.7)\"\r\n    },\r\n    CardStyles_Deaths: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(140, 14, 3, 0.7)\"\r\n    },\r\n    CardStyles_Active: {\r\n        width: \"100%\",\r\n        backgroundColor: \"rgba(109, 60, 84, 0.7)\"\r\n    },\r\n    grid_wrapper: {\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    header_margin: {\r\n        marginBottom: \"20px\"\r\n    }\r\n}\r\nexport default withStyles(styles)(WorldSummary);\r\n","import React from \"react\";\r\nimport WorldSummary from \"components/WorldSummary\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction WorldSummaryView() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wordSummary_wrapper}>\r\n            <WorldSummary/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    wordSummary_wrapper: {\r\n        margin: \"0 auto 20px\"\r\n    }\r\n})\r\nexport default WorldSummaryView;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {toThousandsComma} from \"common/Util\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass WorldTable extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            worldData: [],\r\n            apiError: false,\r\n            pageIndex: 0,\r\n            rowsPerPage: 10\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getWorldData();\r\n    }\r\n\r\n    getWorldData = () => {\r\n        let url = \"https://api.covid19api.com/summary\";\r\n        axios.get(url).then(\r\n            (res) => {\r\n                this.setState({worldData: res.data.Countries}, () => {\r\n                    this.setState({apiError: false});\r\n                });\r\n            }\r\n        ).catch( () => {\r\n            this.setState({apiError: true});\r\n        });\r\n    }\r\n\r\n    handleChangePage = (e, newPage) => {\r\n        this.setState({pageIndex: newPage});\r\n    }\r\n\r\n    handleChangeRowsPerPage = (e) => {\r\n        this.setState({rowsPerPage: parseInt(e.target.value, 10)});\r\n        this.setState({pageIndex: 0});\r\n    }\r\n\r\n    render() {\r\n        const classes = this.props.classes;\r\n\r\n        const rows = this.state.worldData;\r\n        const constState = this.state;\r\n        const emptyRowsNum = constState.rowsPerPage - Math.min(constState.rowsPerPage, rows.length - constState.pageIndex * constState.rowsPerPage);\r\n        return (\r\n            <TableContainer component={Paper} style={{margin:\"0 auto\",width:\"95%\"}}>\r\n                <Table border={2}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>No.</TableCell>\r\n                            <TableCell>Country</TableCell>\r\n                            <TableCell>Total Confirmed</TableCell>\r\n                            <TableCell>Total Recovered</TableCell>\r\n                            <TableCell>Total Active</TableCell>\r\n                            <TableCell>Total Deaths</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            rows\r\n                            .slice(constState.pageIndex * constState.rowsPerPage, constState.pageIndex * constState.rowsPerPage + constState.rowsPerPage)\r\n                            .map((row, index) => (\r\n                                <TableRow key={row.Country}>\r\n                                    <TableCell>{constState.pageIndex * constState.rowsPerPage + index + 1}</TableCell>\r\n                                    <TableCell>{row.Country}</TableCell>\r\n                                    <TableCell>{toThousandsComma(row.TotalConfirmed)}</TableCell>\r\n                                    <TableCell>{toThousandsComma(row.TotalRecovered)}</TableCell>\r\n                                    <TableCell>{toThousandsComma(row.TotalConfirmed - row.TotalRecovered)}</TableCell>\r\n                                    <TableCell>{toThousandsComma(row.TotalDeaths)}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                        {\r\n                            emptyRowsNum > 0 && (\r\n                                <TableRow style={{ height: 53 * emptyRowsNum }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )\r\n                        }\r\n                        <TableRow>\r\n                            <TableCell colSpan={6}>\r\n                                <TablePagination\r\n                                    className={classes.tablePagination}\r\n                                    rowsPerPageOptions={[5, 10, 25, { label: 'All', value: rows.length}]}\r\n                                    component=\"div\"\r\n                                    count={rows.length}\r\n                                    labelRowsPerPage=\"Rows\"\r\n                                    rowsPerPage={this.state.rowsPerPage}\r\n                                    page={this.state.pageIndex}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                    SelectProps={{\r\n                                        native: true,\r\n                                    }}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    tablePagination: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(WorldTable);\r\n","import React from \"react\";\r\nimport WorldTable from \"components/WorldTable\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction WorldTableView() {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.worldTable_wrapper}>\r\n            <WorldTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    worldTable_wrapper: {\r\n        margin: \"0 auto 40px\"\r\n    }\r\n})\r\nexport default WorldTableView;\r\n","import React from \"react\";\r\nimport {makeStyles, Typography, Grid} from \"@material-ui/core\";\r\n\r\nfunction Footer() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.footer_wrapper}>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h6\">Just a small project... :\")</Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer_wrapper: {\r\n        backgroundColor: theme.palette.theme.main,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        padding: \"20px\"\r\n    },\r\n    email_link: {\r\n        color: \"white\"\r\n    }\r\n}))\r\nexport default Footer;","import React, { Component } from \"react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Topbar from \"view/Topbar\";\n\nimport theme from \"theme\";\nimport SearchCountryView from \"view/SearchCountryView\";\nimport WorldSummaryView from \"view/WorldSummaryView/\";\nimport WorldTableView from \"view/WorldTableView/WorldTableView\";\nimport Footer from \"view/Footer\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Topbar/>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render={()=> <Redirect to=\"/covid-dashboard/\"/>}/>\n\t\t\t\t\t\t<Route path=\"/covid-dashboard/:country\" component={SearchCountryView} />\n\t\t\t\t\t\t<Route path=\"/covid-dashboard\" component={SearchCountryView} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t\t<WorldSummaryView/>\n\t\t\t\t<WorldTableView/>\n\t\t\t\t<Footer/>\n\t\t\t</ThemeProvider>\n\n\t\t)\n\t}\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}